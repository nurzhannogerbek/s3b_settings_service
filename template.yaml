AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Parameters:
  PostgreSQLUsername:
    Type: String
  PostgreSQLPassword:
    Type: String
  PostgreSQLHost:
    Type: String
  PostgreSQLPort:
    Type: String
  PostgreSQLDBName:
    Type: String
  EnvironmentName:
    Type: String
  TelegramBotURL:
    Type: String
  FacebookMessengerBotURL:
    Type: String
  FacebookMessengerBotVerifyToken:
    Type: String
  FacebookAppId:
    Type: String
  FacebookAppSecret:
    Type: String

Globals:
  Function:
    Runtime: go1.x
    MemorySize: 128
    Timeout: 30
    Environment:
      Variables:
        POSTGRESQL_USERNAME:
          'Fn::Sub': '${PostgreSQLUsername}'
        POSTGRESQL_PASSWORD:
          'Fn::Sub': '${PostgreSQLPassword}'
        POSTGRESQL_HOST:
          'Fn::Sub': '${PostgreSQLHost}'
        POSTGRESQL_PORT:
          'Fn::Sub': '${PostgreSQLPort}'
        POSTGRESQL_DB_NAME:
          'Fn::Sub': '${PostgreSQLDBName}'

Resources:
  CreateOrganizationSettings:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName:
        'Fn::Sub': '${EnvironmentName}CreateOrganizationSettings'
      CodeUri: bin/organizationsettings/createorganizationsettings.zip
      Handler: bin/organizationsettings/createorganizationsettings
  DeleteOrganizationSettings:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName:
        'Fn::Sub': '${EnvironmentName}DeleteOrganizationSettings'
      CodeUri: bin/organizationsettings/deleteorganizationsettings.zip
      Handler: bin/organizationsettings/deleteorganizationsettings
  GetOrganizationSettings:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName:
        'Fn::Sub': '${EnvironmentName}GetOrganizationSettings'
      CodeUri: bin/organizationsettings/getorganizationsettingsbyid.zip
      Handler: bin/organizationsettings/getorganizationsettingsbyid
  UpdateOrganizationSettings:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName:
        'Fn::Sub': '${EnvironmentName}UpdateOrganizationSettings'
      CodeUri: bin/organizationsettings/updateorganizationsettings.zip
      Handler: bin/organizationsettings/updateorganizationsettings
  RestoreDeletedOrganizationSettings:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName:
        'Fn::Sub': '${EnvironmentName}RestoreDeletedOrganizationSettings'
      CodeUri: bin/organizationsettings/restoredeletedorganizationsettings.zip
      Handler: bin/organizationsettings/restoredeletedorganizationsettings

  DeleteOrganizations:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName:
        'Fn::Sub': '${EnvironmentName}DeleteOrganizations'
      CodeUri: bin/organization/deleteorganizations.zip
      Handler: bin/organization/deleteorganizations
  GetAllArchivedOrganizationDepartments:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName:
        'Fn::Sub': '${EnvironmentName}GetAllArchivedOrganizationDepartments'
      CodeUri: bin/organization/getallarchivedorganizationdepartments.zip
      Handler: bin/organization/getallarchivedorganizationdepartments
  GetAllOrganizationDepartments:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName:
        'Fn::Sub': '${EnvironmentName}GetAllOrganizationDepartments'
      CodeUri: bin/organization/getallorganizationdepartments.zip
      Handler: bin/organization/getallorganizationdepartments
  GetArchivedOrganizationDepartmentsById:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName:
        'Fn::Sub': '${EnvironmentName}GetArchivedOrganizationDepartmentsById'
      CodeUri: bin/organization/getarchivedorganizationdepartmentsbyid.zip
      Handler: bin/organization/getarchivedorganizationdepartmentsbyid
  GetOrganizationById:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName:
        'Fn::Sub': '${EnvironmentName}GetOrganizationById'
      CodeUri: bin/organization/getorganizationbyid.zip
      Handler: bin/organization/getorganizationbyid
  GetOrganizationDepartmentsById:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName:
        'Fn::Sub': '${EnvironmentName}GetOrganizationDepartmentsById'
      CodeUri: bin/organization/getorganizationdepartmentsbyid.zip
      Handler: bin/organization/getorganizationdepartmentsbyid
  GetOrganizationsByIds:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName:
        'Fn::Sub': '${EnvironmentName}GetOrganizationsByIds'
      CodeUri: bin/organization/getorganizationsbyids.zip
      Handler: bin/organization/getorganizationsbyids
  RestoreDeletedOrganizations:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName:
        'Fn::Sub': '${EnvironmentName}RestoreDeletedOrganizations'
      CodeUri: bin/organization/restoredeletedorganizations.zip
      Handler: bin/organization/restoredeletedorganizations

  GetFacebookPages:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName:
        'Fn::Sub': '${EnvironmentName}GetFacebookPages'
      CodeUri: bin/facebookmessenger/getfacebookpages.zip
      Handler: bin/facebookmessenger/getfacebookpages
      Environment:
        Variables:
          FACEBOOK_APP_ID:
            'Fn::Sub': '${FacebookAppId}'
          FACEBOOK_APP_SECRET:
            'Fn::Sub': '${FacebookAppSecret}'

  CreateChannel:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName:
        'Fn::Sub': '${EnvironmentName}CreateChannel'
      CodeUri: bin/channel/createchannel.zip
      Handler: bin/channel/createchannel
      Environment:
        Variables:
          TELEGRAM_BOT_URL:
            'Fn::Sub': '${TelegramBotURL}'
          FACEBOOK_MESSENGER_BOT_URL:
            'Fn::Sub': '${FacebookMessengerBotURL}'
          FACEBOOK_MESSENGER_BOT_VERIFY_TOKEN:
            'Fn::Sub': '${FacebookMessengerBotVerifyToken}'
          FACEBOOK_APP_ID:
            'Fn::Sub': '${FacebookAppId}'
          FACEBOOK_APP_SECRET:
            'Fn::Sub': '${FacebookAppSecret}'
  UpdateChannel:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName:
        'Fn::Sub': '${EnvironmentName}UpdateChannel'
      CodeUri: bin/channel/updatechannel.zip
      Handler: bin/channel/updatechannel
      Environment:
        Variables:
          TELEGRAM_BOT_URL:
            'Fn::Sub': '${TelegramBotURL}'
          FACEBOOK_MESSENGER_BOT_URL:
            'Fn::Sub': '${FacebookMessengerBotURL}'
          FACEBOOK_MESSENGER_BOT_VERIFY_TOKEN:
            'Fn::Sub': '${FacebookMessengerBotVerifyToken}'
          FACEBOOK_APP_ID:
            'Fn::Sub': '${FacebookAppId}'
          FACEBOOK_APP_SECRET:
            'Fn::Sub': '${FacebookAppSecret}'
  GetChannel:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName:
        'Fn::Sub': '${EnvironmentName}GetChannel'
      CodeUri: bin/channel/getchannel.zip
      Handler: bin/channel/getchannel
  GetChannels:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName:
        'Fn::Sub': '${EnvironmentName}GetChannels'
      CodeUri: bin/channel/getchannels.zip
      Handler: bin/channel/getchannels

Outputs:
  CreateOrganizationSettingsARN:
    Value:
      'Fn::GetAtt': CreateOrganizationSettings.Arn
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}:${EnvironmentName}CreateOrganizationSettingsARN'
  DeleteOrganizationSettingsARN:
    Value:
      'Fn::GetAtt': DeleteOrganizationSettings.Arn
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}:${EnvironmentName}DeleteOrganizationSettingsARN'
  GetOrganizationSettingsARN:
    Value:
      'Fn::GetAtt': GetOrganizationSettings.Arn
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}:${EnvironmentName}GetOrganizationSettingsARN'
  UpdateOrganizationSettingsARN:
    Value:
      'Fn::GetAtt': UpdateOrganizationSettings.Arn
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}:${EnvironmentName}UpdateOrganizationSettingsARN'
  RestoreDeletedOrganizationSettingsARN:
    Value:
      'Fn::GetAtt': RestoreDeletedOrganizationSettings.Arn
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}:${EnvironmentName}RestoreDeletedOrganizationSettingsARN'

  DeleteOrganizationsARN:
    Value:
      'Fn::GetAtt': DeleteOrganizations.Arn
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}:${EnvironmentName}DeleteOrganizationsARN'
  GetAllArchivedOrganizationDepartmentsARN:
    Value:
      'Fn::GetAtt': GetAllArchivedOrganizationDepartments.Arn
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}:${EnvironmentName}GetAllArchivedOrganizationDepartmentsARN'
  GetAllOrganizationDepartmentsARN:
    Value:
      'Fn::GetAtt': GetAllOrganizationDepartments.Arn
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}:${EnvironmentName}GetAllOrganizationDepartmentsARN'
  GetArchivedOrganizationDepartmentsByIdARN:
    Value:
      'Fn::GetAtt': GetArchivedOrganizationDepartmentsById.Arn
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}:${EnvironmentName}GetArchivedOrganizationDepartmentsByIdARN'
  GetOrganizationByIdARN:
    Value:
      'Fn::GetAtt': GetOrganizationById.Arn
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}:${EnvironmentName}GetOrganizationByIdARN'
  GetOrganizationDepartmentsByIdARN:
    Value:
      'Fn::GetAtt': GetOrganizationDepartmentsById.Arn
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}:${EnvironmentName}GetOrganizationDepartmentsByIdARN'
  GetOrganizationsByIdsARN:
    Value:
      'Fn::GetAtt': GetOrganizationsByIds.Arn
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}:${EnvironmentName}GetOrganizationsByIdsARN'
  RestoreDeletedOrganizationsARN:
    Value:
      'Fn::GetAtt': RestoreDeletedOrganizations.Arn
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}:${EnvironmentName}RestoreDeletedOrganizationsARN'

  GetFacebookPagesARN:
    Value:
      'Fn::GetAtt': GetFacebookPages.Arn
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}:${EnvironmentName}GetFacebookPagesARN'

  CreateChannelARN:
    Value:
      'Fn::GetAtt': CreateChannel.Arn
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}:${EnvironmentName}CreateChannelARN'
  UpdateChannelARN:
    Value:
      'Fn::GetAtt': UpdateChannel.Arn
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}:${EnvironmentName}UpdateChannelARN'
  GetChannelARN:
    Value:
      'Fn::GetAtt': GetChannel.Arn
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}:${EnvironmentName}GetChannelARN'
  GetChannelsARN:
    Value:
      'Fn::GetAtt': GetChannels.Arn
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}:${EnvironmentName}GetChannelsARN'