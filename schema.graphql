type GetCountryByIdOutput {
    countryId: String!
    countryShortName: String!
    countryOfficialName: String!
    countryAlpha2Code: String!
    countryAlpha3Code: String!
    countryNumericCode: Int!
    countryCodeTopLevelDomain: String!
}

type GetLocationByIdOutput {
    country: GetCountryByIdOutput!
    locationId: String!
    locationAlpha3Code: String!
    locationName: String!
    locationAdministrativeDivisionCode: String!
    locationCoordinates: String!
}

type GetTimezoneByIdOutput {
    timezoneId: String!
    countryAlpa2Code: String!
    timezoneName: String!
    utcOffset: String!
}

type GetOrganizationSettingsByIdOutput {
    organizationId: String!
    countryId: String
    country: GetCountryByIdOutput
    locationId: String
    location: GetLocationByIdOutput
    organizationSettingAddress: String
    organizationSettingPostalCode: String
    organizationSettingWorkTime: String
    organizationSettingPrivacy: String!
    timezoneId: String
    timezone: GetTimezoneByIdOutput
}

type Query {
    # Получить настройки компании по Id. Включает в себя архивированные компании.
    getOrganizationSettingsById(organizationId: String!): GetOrganizationSettingsByIdOutput!
}

input CreateOrganizationSettingsInput {
    organizationId: String!
    countryId: String
    locationId: String
    organizationSettingAddress: String
    organizationSettingPostalCode: String
    organizationSettingWorkTime: String
    organizationSettingPrivacy: String!
    timezoneId: String
}

type CreateOrganizationSettingsOutput {
    organizationId: String!
    countryId: String
    country: GetCountryByIdOutput
    locationId: String
    location: GetLocationByIdOutput
    organizationSettingAddress: String
    organizationSettingPostalCode: String
    organizationSettingWorkTime: String
    organizationSettingPrivacy: String!
    timezoneId: String
    timezone: GetTimezoneByIdOutput
}

input UpdateOrganizationSettingsInput {
    organizationId: String!
    countryId: String
    locationId: String
    organizationSettingAddress: String
    organizationSettingPostalCode: String
    organizationSettingWorkTime: String
    organizationSettingPrivacy: String
    timezoneId: String
}

type UpdateOrganizationSettingsOutput {
    organizationId: String!
    countryId: String
    country: GetCountryByIdOutput
    locationId: String
    location: GetLocationByIdOutput
    organizationSettingAddress: String
    organizationSettingPostalCode: String
    organizationSettingWorkTime: String
    organizationSettingPrivacy: String!
    timezoneId: String
    timezone: GetTimezoneByIdOutput
}

type DeleteOrganizationSettingsOutput {
    organizationId: String!
    deleted: Boolean!
}

type RestoreDeletedOrganizationSettingsOutput {
    organizationId: String!
    restored: Boolean!
}

type Mutation {
    # Создать настройки компании
    createOrganizationSettings(input: CreateOrganizationSettingsInput!): CreateOrganizationSettingsOutput!
    # Обновить настройки компании
    updateOrganizationSettings(input: UpdateOrganizationSettingsInput!): UpdateOrganizationSettingsOutput!
    # Удалить настройки компании
    deleteOrganizationSettings(osssrganizationId: String!): DeleteOrganizationSettingsOutput!
    # Восстановить настройки компании
    restoreDeletedOrganizationSettings(organizationId: String!): RestoreDeletedOrganizationSettingsOutput!
}

schema {
    query: Query
    mutation: Mutation
}
